name: test artifacts jobs
on: [push]
jobs:
  deploy:
    name: Deploying artefacts
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: adding required packages for repo publishing
        shell: bash
        run: |
          sudo bash -c "echo 'deb http://repo.aptly.info/ squeeze main' >> /etc/apt/sources.list"
          sudo DEBIAN_FRONTEND=noninteractive apt-key adv --keyserver pool.sks-keyservers.net --recv-keys ED75B5A4483DA07C
          sudo DEBIAN_FRONTEND=noninteractive apt-get -yq update 
          sudo DEBIAN_FRONTEND=noninteractive apt-get -yq install gnupg aptly
      - name: create repo and add packages
        shell: bash
        run: |
          aptly repo create -distribution="bionic" zfs-backports-experimental
          sed -i 's/\"architectures\": \[\]/\"architectures\": \[\"amd64\"\]/g' ~/.aptly.conf
          echo -n "${{ secrets.GPG_KEY }}" > ./apt-private-key.asc
          echo ${{ secrets.GPG_PASS }} | gpg --batch --import ./apt-private-key.asc
          ls ./*.deb -1 | xargs aptly repo add zfs-backports-experimental         
          aptly publish repo --gpg-key="74191A3222C2FFD5" --batch=true --passphrase="${{ secrets.GPG_PASS }}" zfs-backports-experimental 
      - name: list contents
        shell: bash
        run: |     
          aptly repo show -with-packages zfs-backports-experimental
          find /home/runner/.aptly/public -name '*.deb'
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: list contents
        shell: bash
        run: |2
          ls ./ -alt
          rm ./public -r
          cp -r /home/runner/.aptly/public ./
          python - <<END
          import os          
          indexTextStart = """<!DOCTYPE html>
          <html>
          <head><title>Index of {folderPath}</title></head>
          <body>
              <h2>Index of {folderPath}</h2>
              <hr>
              <ul>
                          <li> 
                        <a href='../'>../</a>
                 </li>
          """
          indexTextEnd = """ 
                  </ul>
          <hr/>         
          <p>Page created: $(date -Is)</p>
          </body>
          </html>
          """          
          def index_folder(folderPath):
              print("Indexing: " + folderPath +'/')
              #Getting the content of the folder
              files = os.listdir(folderPath)
              #If Root folder, correcting folder name
              root = folderPath
              if folderPath == '.':
                      root = 'Root' 
              indexText = indexTextStart.format(folderPath=root)
              for file in files:
                      #Avoiding index.html files
                      if file != 'index.html':
                              indexText += "\t\t<li>\n\t\t\t<a href='" + file + "'>" + file + "</a>\n\t\t</li>\n"
                      #Recursive call to continue indexing
                      if os.path.isdir(folderPath+'/'+file):
                              index_folder(folderPath + '/' + file)
              indexText += indexTextEnd
              index = open(folderPath+'/index.html', "w")
              index.write(indexText)
          index_folder('./public')
          END
          git config --global user.email "job@terem.fr"
          git config --global user.name "Andrey Prokopenko"
          git add .
          git commit -am "pages repo update for commit"
          git push
  build:
    name: Building packages
    runs-on: ubuntu-18.04
    steps:
      - name: create artifacts
        shell: bash
        run: |
          mkdir -p ./zfs-localrepo 
          echo 'test123' >> ./zfs-localrepo/test123.txt
          echo 'test456' >> ./zfs-localrepo/test456.txt
      - name: Cache files
        uses: actions/cache@v1
        with:
          path: ./zfs-localrepo
          key: ${{ runner.OS }}-zfs-${{ github.sha }}
  test:
    needs: build
    name: Testing packages
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        testbatch:
           - 'test123'
           - 'test456'
    steps:
      - name: Restore cached files
        uses: actions/cache@v1
        with:
          path: ./zfs-localrepo
          key: ${{ runner.OS }}-zfs-${{ github.sha }}
      - name: list artifacts
        shell: bash
        run: |
          ls ./zfs-localrepo -alt
          cat ./zfs-localrepo/${{ matrix.testbatch }}.txt
         
